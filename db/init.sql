-- MySQL Script generated by MySQL Workbench
-- Fri Jun  6 14:41:23 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tep
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tep
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tep` DEFAULT CHARACTER SET utf8 ;
USE `tep` ;

-- -----------------------------------------------------
-- Table `tep`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `role` ENUM('user', 'moderator', 'admin') NOT NULL DEFAULT 'user',
  `suspended` TINYINT NOT NULL DEFAULT 0,
  `password_hash` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`Venue`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`Venue` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `address` VARCHAR(255) NULL,
  `url` VARCHAR(500) NULL,
  `approved` TINYINT NOT NULL DEFAULT 0,
  `submitted_by` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_Venue_User1_idx` (`submitted_by` ASC) VISIBLE,
  CONSTRAINT `fk_Venue_User1`
    FOREIGN KEY (`submitted_by`)
    REFERENCES `tep`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`Event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`Event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` VARCHAR(45) NULL,
  `startTime` DATETIME NULL,
  `endTime` DATETIME NULL,
  `location` VARCHAR(255) BINARY NULL,
  `approved` TINYINT NOT NULL DEFAULT 0,
  `venue_id` INT NULL,
  `submitted_by` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Event_Venue_idx` (`venue_id` ASC) VISIBLE,
  INDEX `fk_Event_User1_idx` (`submitted_by` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `fk_Event_Venue`
    FOREIGN KEY (`venue_id`)
    REFERENCES `tep`.`Venue` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_User1`
    FOREIGN KEY (`submitted_by`)
    REFERENCES `tep`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`Artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`Artist` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(45) NULL,
  `location` VARCHAR(255) NULL,
  `genre` VARCHAR(255) NULL,
  `url` VARCHAR(500) NULL,
  `avatar_url` VARCHAR(500) NULL,
  `approved` TINYINT NOT NULL DEFAULT 0,
  `submitted_by` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Artist_User1_idx` (`submitted_by` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `fk_Artist_User1`
    FOREIGN KEY (`submitted_by`)
    REFERENCES `tep`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`artist_has_event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`artist_has_event` (
  `artist_id` INT NOT NULL,
  `event_id` INT NOT NULL,
  PRIMARY KEY (`artist_id`, `event_id`),
  INDEX `fk_Artist_has_Event_Event1_idx` (`event_id` ASC) VISIBLE,
  INDEX `fk_Artist_has_Event_Artist1_idx` (`artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_Artist_has_Event_Artist1`
    FOREIGN KEY (`artist_id`)
    REFERENCES `tep`.`Artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Artist_has_Event_Event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `tep`.`Event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`Media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`Media` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `url` VARCHAR(500) NOT NULL,
  `type` ENUM('image', 'video') NOT NULL,
  `venue_id` INT NULL,
  `artist_id` INT NULL,
  `submitted_by` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Media_Venue1_idx` (`venue_id` ASC) VISIBLE,
  INDEX `fk_Media_Artist1_idx` (`artist_id` ASC) VISIBLE,
  INDEX `fk_Media_User1_idx` (`submitted_by` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `fk_Media_Venue1`
    FOREIGN KEY (`venue_id`)
    REFERENCES `tep`.`Venue` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Media_Artist1`
    FOREIGN KEY (`artist_id`)
    REFERENCES `tep`.`Artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Media_User1`
    FOREIGN KEY (`submitted_by`)
    REFERENCES `tep`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`Notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`Notification` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` ENUM('event_submission', 'artist_submission', 'contact_form', 'system_message') NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `message` TEXT NULL,
  `created_at` DATETIME NOT NULL,
  `send_email` TINYINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`event_notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`event_notification` (
  `notification_id` INT NOT NULL,
  `event_id` INT NOT NULL,
  PRIMARY KEY (`notification_id`, `event_id`),
  INDEX `fk_Notification_has_Event_Event1_idx` (`event_id` ASC) VISIBLE,
  INDEX `fk_Notification_has_Event_Notification1_idx` (`notification_id` ASC) VISIBLE,
  CONSTRAINT `fk_Notification_has_Event_Notification1`
    FOREIGN KEY (`notification_id`)
    REFERENCES `tep`.`Notification` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notification_has_Event_Event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `tep`.`Event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`artist_notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`artist_notification` (
  `Notification_id` INT NOT NULL,
  `Artist_id` INT NOT NULL,
  PRIMARY KEY (`Notification_id`, `Artist_id`),
  INDEX `fk_Notification_has_Artist_Artist1_idx` (`Artist_id` ASC) VISIBLE,
  INDEX `fk_Notification_has_Artist_Notification1_idx` (`Notification_id` ASC) VISIBLE,
  CONSTRAINT `fk_Notification_has_Artist_Notification1`
    FOREIGN KEY (`Notification_id`)
    REFERENCES `tep`.`Notification` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notification_has_Artist_Artist1`
    FOREIGN KEY (`Artist_id`)
    REFERENCES `tep`.`Artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`Language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`Language` (
  `code` VARCHAR(10) NOT NULL,
  `label` VARCHAR(45) NOT NULL,
  `is_default` TINYINT NOT NULL,
  `is_enabled` TINYINT NOT NULL,
  PRIMARY KEY (`code`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`Artist_has_Media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`Artist_has_Media` (
  `Artist_id` INT NOT NULL,
  `Media_id` INT NOT NULL,
  PRIMARY KEY (`Artist_id`, `Media_id`),
  INDEX `fk_Artist_has_Media_Media1_idx` (`Media_id` ASC) VISIBLE,
  INDEX `fk_Artist_has_Media_Artist1_idx` (`Artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_Artist_has_Media_Artist1`
    FOREIGN KEY (`Artist_id`)
    REFERENCES `tep`.`Artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Artist_has_Media_Media1`
    FOREIGN KEY (`Media_id`)
    REFERENCES `tep`.`Media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tep`.`Venue_has_Media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tep`.`Venue_has_Media` (
  `Venue_id` INT NOT NULL,
  `Media_id` INT NOT NULL,
  PRIMARY KEY (`Venue_id`, `Media_id`),
  INDEX `fk_Venue_has_Media_Media1_idx` (`Media_id` ASC) VISIBLE,
  INDEX `fk_Venue_has_Media_Venue1_idx` (`Venue_id` ASC) VISIBLE,
  CONSTRAINT `fk_Venue_has_Media_Venue1`
    FOREIGN KEY (`Venue_id`)
    REFERENCES `tep`.`Venue` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venue_has_Media_Media1`
    FOREIGN KEY (`Media_id`)
    REFERENCES `tep`.`Media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
